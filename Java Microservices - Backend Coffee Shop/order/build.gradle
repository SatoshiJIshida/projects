plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'com.palantir.docker' version "${dockerPalantirVersion}"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.microservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies { // domain/group:package/name:version
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.json:json:20190722'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation "org.mockito:mockito-core:3.+" 
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	compileOnly         'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

apply plugin : 'java'
ext {
   javaMainClass = 'com.microservice.order.OrderApplication'
}

application {
    getMainClass().set(javaMainClass)
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('dockerPrepare') {
	dependsOn('bootJar')
}

docker {
	name "order:0.0.1"
	dockerfile file('Dockerfile')
	copySpec.from("install")
			.from("build/libs")
			.into("install")
	pull false
	noCache true
}